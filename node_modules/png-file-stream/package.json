{
  "name": "png-file-stream",
  "version": "1.0.0",
  "description": "Stream a glob list of PNG files as bitmaps",
  "main": "index.js",
  "scripts": {
    "test": "node_modules/.bin/grunt ci"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/eugeneware/png-file-stream"
  },
  "keywords": [
    "png",
    "stream",
    "bitmap",
    "streaming",
    "file",
    "glob",
    "globbing"
  ],
  "author": {
    "name": "Eugene Ware",
    "email": "eugene@noblesamurai.com"
  },
  "license": "BSD-3-Clause",
  "bugs": {
    "url": "https://github.com/eugeneware/png-file-stream/issues"
  },
  "dependencies": {
    "glob-stream": "~3.1.9",
    "png-js": "~0.1.1",
    "through2": "~0.2.3"
  },
  "devDependencies": {
    "expect.js": "~0.2.0",
    "grunt-contrib-jshint": "~0.6.4",
    "grunt-contrib-watch": "~0.5.3",
    "grunt": "~0.4.1",
    "grunt-mocha-cli": "~1.1.0",
    "grunt-complexity": "~0.1.3",
    "grunt-cli": "~0.1.9",
    "concat-stream": "~1.2.1"
  },
  "readme": "# png-file-stream\n\nStream a glob list of PNG files as bitmaps.\n\n[![build status](https://secure.travis-ci.org/eugeneware/png-file-stream.png)](http://travis-ci.org/eugeneware/png-file-stream)\n\nGiven a glob match specifying a list of PNG images, this will return a readable\nstream that will be a Buffer of the raw pixel data. This will be a one dimensional\narray of RGBA values.\n\n## Installation\n\nThis module is installed via npm:\n\n``` bash\n$ npm install png-file-stream\n```\n\n## Example Usage\n\nTakes a glob match specifying a list of PNG images, and creates an animated GIF using\n[gifencoder](https://github.com/eugeneware/gifencoder).\n\n``` js\nvar pngFileStream = require('png-file-stream');\nvar encoder = new GIFEncoder(854, 480);\n\npngFileStream('test/**/frame?.png')\n  .pipe(encoder.createWriteStream({ repeat: -1, delay: 500, quality: 10 }))\n  .pipe(fs.createWriteStream('myanimated.gif')));\n```\n\nYou can skip the PNG to RAW Pixel Data conversion, by passing an optional \"false\"\nvalue through:\n\n``` js\nvar pngFileStream = require('png-file-stream');\npngFileStream('test/**/frame?.png', false)\n  .pipe(fs.createWriteStream('myconcatendatedpngs.dat')));\n```\n",
  "readmeFilename": "README.md",
  "_id": "png-file-stream@1.0.0",
  "dist": {
    "shasum": "05446fc27d2b707c60f833890c7d41d2cfefc53d"
  },
  "_from": "png-file-stream@1.0.0",
  "_resolved": "http://registry.npmjs.org/png-file-stream/-/png-file-stream-1.0.0.tgz"
}
